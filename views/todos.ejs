<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
    <h1>Budget Tracker</h1>
    <ul>

    <!-- All rendered input data is being sent from 'todos.js' file in the controllers folder via res.render('todos.ejs') -->

    <!-- Grabs 'todos' (todoItems in 'todos.js') from 'todos.js' file in controllers folder. -->
    <!-- Run forEach loop on array -->
    <% todos.forEach( el => { %>

        <!-- Create li with class of 'todoItem' and 'data-id' of the unique id given by Mongoose and MongoDB -->
        <li class='todoItem' data-id='<%=el._id%>'>

            <!-- If the span on the element in the array has a completed property equating to true, assign it the 'completed' class  -->
            <!-- Otherwise, assign it the 'not' class -->

            <!-- Insert looped todo item from array and todo item cost fixed to 2 decimal points -->
            <span class='<%= el.completed === true ? 'completed' : 'not'%>'><%= el.todo %> $<%= el.cost.toFixed(2) %></span>

            <!-- Created span with a class of 'del' -->
            <span class='del'> Delete </span>
        </li>
    <% }) %>    
    </ul>

    <!-- Grabs 'left' from res.render (itemsLeft in 'todos.js') -->
    <!-- Projects how many documents have a completed value of false -->
    <!-- <h2>Money Left: <%= left %></h2> -->
    
    <h2>Budget Remaining: $<%= budget.toFixed(2) %></h2>

    <!-- Form with a route of '' with a POST request method - accessing '' method -->
    <form action="/todos/createBudget" method="POST">

        <!-- Input (budget allocated) - able to parse user input by name value -->
        <input type="number" step="0.01" placeholder="Budget Allocated" name="budget">

        <input type="submit" value="Set Budget">

    </form>

    <br>

    <!-- Form with a route of '/todos/createTodo' with a POST request method - accessing createTodo method -->
    <form action="/todos/createTodo" method='POST'>

        <!-- First input - able to parse user input by name value -->
        <input type="text" placeholder="Enter Item Name" name='todoItem'>

        <!-- Second input (cost of item) - able to parse user input by name value -->
        <input type="number" step="0.01" placeholder="Enter Item Cost" name="cost">

        <!-- Built in submit in HTML -->
        <input type="submit">
    </form>

    <script src="js/main.js"></script>
</body>
</html>